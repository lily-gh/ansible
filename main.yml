---
- name: Main Playbook
  hosts: localhost
  gather_facts: true  # Ensure platform facts are gathered

  tasks:
    - name: Include macOS tasks
      include_tasks: tasks/macos-packages.yml
      when: ansible_facts['os_family'] == 'Darwin'

    - name: Include Ubuntu tasks
      include_tasks: tasks/ubuntu-packages.yml
      when: ansible_facts['os_family'] == 'Debian'

    - name: Install Oh My Zsh
      ansible.builtin.shell: |
        sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
      args:
        creates: ~/.oh-my-zsh

    - name: Ensure zsh-autosuggestions is installed
      ansible.builtin.git:
        repo: https://github.com/zsh-users/zsh-autosuggestions.git
        dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions"

    - name: Ensure zsh-syntax-highlighting is installed
      ansible.builtin.git:
        repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
        dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting"

    - name: Install Powerlevel10k theme
      ansible.builtin.git:
        repo: https://github.com/romkatv/powerlevel10k.git
        dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/themes/powerlevel10k"
        version: master

    # Get the current user
    - name: Get current user
      ansible.builtin.command: whoami
      register: current_user

    # Switch main shell to zsh
    - name: Change default shell to zsh
      ansible.builtin.shell: chsh -s $(which zsh) "{{ current_user.stdout }}"
      become: true

    - name: Include dotfiles tasks
      include_tasks: tasks/dotfiles.yml

    - name: Set font destination based on OS
      ansible.builtin.set_fact:
        font_dest: >-
          {{
            (ansible_facts['os_family'] == 'Darwin') | ternary(ansible_env.HOME + '/Library/Fonts', ansible_env.HOME + '/.local/share/fonts')
          }}

    - name: Check if any Meslo* files exist in font directory
      ansible.builtin.find:
        paths: "{{ font_dest }}"
        patterns: "Meslo*"
      register: meslo_files

    - name: Include font installation playbook
      include_tasks: tasks/nerdfonts.yml
      when: meslo_files.matched == 0

    - name: Check if ~/.asdf directory exists
      ansible.builtin.stat:
        path: "{{ ansible_env.HOME }}/.asdf"
      register: asdf_folder

    - name: Include asdf tasks if ~/.asdf does not exist
      include_tasks: tasks/asdf.yml
      when: not asdf_folder.stat.exists

- import_playbook: tasks/install-python.yml
#- import_playbook: tasks/setup-ssh.yml
#- import_playbook: tasks/clone-lilydevtools.yml 
